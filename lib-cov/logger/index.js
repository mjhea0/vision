/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['logger/index.js']) {
  _$jscoverage['logger/index.js'] = [];
  _$jscoverage['logger/index.js'][1] = 0;
  _$jscoverage['logger/index.js'][2] = 0;
  _$jscoverage['logger/index.js'][4] = 0;
  _$jscoverage['logger/index.js'][5] = 0;
  _$jscoverage['logger/index.js'][13] = 0;
}
_$jscoverage['logger/index.js'][1]++;
var winston = require("winston");
_$jscoverage['logger/index.js'][2]++;
var config = require("../configuration");
_$jscoverage['logger/index.js'][4]++;
function Logger() {
  _$jscoverage['logger/index.js'][5]++;
  return winston.add(winston.transports.File, {filename: config.get("logger:filename"), maxsize: 1048576, maxFiles: 3, level: config.get("logger:level")});
}
_$jscoverage['logger/index.js'][13]++;
module.exports = new Logger();
_$jscoverage['logger/index.js'].source = ["var winston = require('winston')","var config = require('../configuration');","","function Logger(){","  return winston.add(winston.transports.File, {","    filename: config.get('logger:filename'),","    maxsize: 1048576,","    maxFiles: 3,","    level: config.get('logger:level')","  }); ","}","","module.exports = new Logger();"];
