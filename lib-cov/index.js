/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['index.js']) {
  _$jscoverage['index.js'] = [];
  _$jscoverage['index.js'][3] = 0;
  _$jscoverage['index.js'][4] = 0;
  _$jscoverage['index.js'][5] = 0;
  _$jscoverage['index.js'][6] = 0;
  _$jscoverage['index.js'][7] = 0;
  _$jscoverage['index.js'][8] = 0;
  _$jscoverage['index.js'][11] = 0;
  _$jscoverage['index.js'][12] = 0;
  _$jscoverage['index.js'][13] = 0;
  _$jscoverage['index.js'][14] = 0;
  _$jscoverage['index.js'][15] = 0;
  _$jscoverage['index.js'][16] = 0;
  _$jscoverage['index.js'][17] = 0;
  _$jscoverage['index.js'][18] = 0;
  _$jscoverage['index.js'][19] = 0;
  _$jscoverage['index.js'][20] = 0;
  _$jscoverage['index.js'][21] = 0;
  _$jscoverage['index.js'][24] = 0;
  _$jscoverage['index.js'][25] = 0;
  _$jscoverage['index.js'][28] = 0;
  _$jscoverage['index.js'][29] = 0;
  _$jscoverage['index.js'][31] = 0;
  _$jscoverage['index.js'][32] = 0;
  _$jscoverage['index.js'][35] = 0;
}
_$jscoverage['index.js'][3]++;
var express = require("express");
_$jscoverage['index.js'][4]++;
var http = require("http");
_$jscoverage['index.js'][5]++;
var path = require("path");
_$jscoverage['index.js'][6]++;
var config = require("./configuration");
_$jscoverage['index.js'][7]++;
var routes = require("./routes");
_$jscoverage['index.js'][8]++;
var notFound = require("./middleware/notFound");
_$jscoverage['index.js'][11]++;
var app = express();
_$jscoverage['index.js'][12]++;
app.set("port", config.get("express:port"));
_$jscoverage['index.js'][13]++;
app.set("views", __dirname + "/views");
_$jscoverage['index.js'][14]++;
app.set("view engine", "jade");
_$jscoverage['index.js'][15]++;
app.use(express.logger({immediate: true, format: "dev"}));
_$jscoverage['index.js'][16]++;
app.use(express.bodyParser());
_$jscoverage['index.js'][17]++;
app.use(express.methodOverride());
_$jscoverage['index.js'][18]++;
app.use(express.cookieParser("your secret here"));
_$jscoverage['index.js'][19]++;
app.use(express.session());
_$jscoverage['index.js'][20]++;
app.use(app.router);
_$jscoverage['index.js'][21]++;
app.use(express["static"](path.join(__dirname, "public")));
_$jscoverage['index.js'][24]++;
if ("development" == app.get("env")) {
  _$jscoverage['index.js'][25]++;
  app.use(express.errorHandler());
}
_$jscoverage['index.js'][28]++;
app.get("/heartbeat", routes.heartbeat);
_$jscoverage['index.js'][29]++;
app.use(notFound.index);
_$jscoverage['index.js'][31]++;
http.createServer(app).listen(app.get("port"), (function () {
  _$jscoverage['index.js'][32]++;
  console.log("Express server listening on port " + app.get("port"));
}));
_$jscoverage['index.js'][35]++;
module.exports = app;
_$jscoverage['index.js'].source = ["// dependencies","","var express = require('express');","var http = require('http');","var path = require('path');","var config = require('./configuration');","var routes = require('./routes');","var notFound = require('./middleware/notFound');","","// config - all environments","var app = express();","app.set('port', config.get(\"express:port\"));","app.set('views', __dirname + '/views');","app.set('view engine', 'jade');","app.use(express.logger({ immediate: true, format: 'dev' }));","app.use(express.bodyParser());","app.use(express.methodOverride());","app.use(express.cookieParser('your secret here'));","app.use(express.session());","app.use(app.router);","app.use(express.static(path.join(__dirname, 'public')));","","// config - development only","if ('development' == app.get('env')) {","  app.use(express.errorHandler());","}","","app.get('/heartbeat', routes.heartbeat);","app.use(notFound.index);","","http.createServer(app).listen(app.get('port'), function(){","  console.log('Express server listening on port ' + app.get('port'));","});","","module.exports = app;"];
